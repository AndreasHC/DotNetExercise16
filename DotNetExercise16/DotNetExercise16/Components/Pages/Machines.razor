@page "/machines"

<!-- Copied from the weather template without necessarily understanding it-->
@attribute [StreamRendering]

<!-- Copied from home template without necessarily understanding it-->
<PageTitle>Machines</PageTitle>

<h1>Machines</h1>

<!--From the weather template again-->
@if (machines == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Id</th>
                <th>Status</th>
                <th>Time of Last Message</th>
                <th>Last Message</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var machine in machines)
            {
                Message? last = machine.Messages.LastOrDefault();
                <tr>
                    <td>@machine.Name</td>
                    <td>@machine.Id.ToString()</td>
                    @if (machine.IsOnline)
                    {
                        <td>Online</td>
                    }
                    else
                    {
                        <td>Offline</td>
                    }
                    @if(last == null)
                    {
                        <td />
                        <td />

                    }
                    else
                    {
                        <td>@last.Time.ToShortDateString() @last.Time.ToLongTimeString()</td>
                        <td>@last.Content</td>

                    }
                </tr>
            }
        </tbody>
    </table>

}

@code {
    private List<Machine>? machines;

    // From the weather sample yet again
    protected override async Task OnInitializedAsync()
    {
        machines = new List<Machine>()
        {
            new Machine()
            {
                Name = "The one by the door",
                Id = Guid.NewGuid()                
            },
            new Machine()
            {
               Name = "The one behind the bookshelf",
               Id = Guid.NewGuid(),
               IsOnline = false
            }
        };
        machines[1].Messages.Add(
            new Message()
            { 
                Time = DateTime.Now,
                Content = "Turned off anonymously with emergency button"
            });
    }

    private class Machine
    {
        public required string Name { get; set; }
        public required Guid Id { get; set; }
        public bool IsOnline { get; set; } = true;
        public List<Message> Messages { get; } = new List<Message> { };
    }

    private class Message
    {
        public required string Content { get; set; }
        public DateTime Time { get; set; }
    }
}
